body {
   
}

    /* Using the ::before pseudo-element on the body to create the multi-coloured bar at the very top. */
    /* It's a neat trick using a linear gradient to mimic the colours of the South African flag. I got this idea from the official Goverment Website */
    body::before {
        content: '';
        display: block;
        height: 15px;
        background: linear-gradient(to right, #DE3831 20%, #002395 20%, #002395 40%, #007A4D 40%, #007A4D 60%, #FFB612 60%, #FFB612 80%, #000000 80% );
    }

footer {
    /* Adding a thick top border to the footer that matches my main theme colour. */
    border-top: 15px solid #007A4D;
    color: #adb5bd;
}

/* The hero section uses a background image. */
.hero-section {
    position: relative;
    background-image: url('../images/hero-background.jpg');
    background-size: cover;
    background-position: center;
    color: white;
}

    /* This ::before pseudo-element adds a dark overlay on top of the hero image. */
    /* This makes the white text on top much easier to read. */
    .hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1; /* Sits below the text but above the image */
    }

    /* Making sure the actual content of the hero section is on top of the overlay. */
    .hero-section .container {
        position: relative;
        z-index: 2;
    }

    /* Adding a subtle text shadow to make the hero text pop even more. */
    .hero-section h1, .hero-section p {
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

.icon-circle {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 80px;
    height: 80px;
    background-color: #f0f0f0;
    border-radius: 50%;
    color: var(--bs-primary);
    transition: all 0.3s ease-in-out;
}

    .icon-circle:hover {
        background-color: var(--bs-primary);
        color: #ffffff;
    }

/* A simple media query to stack the 'guidance' column nicely on mobile screens. */
@media (max-width: 767px) {
    .guidance-column {
        margin-top: 2rem;
    }
}

#engagement-strategy-box {
    background-color: #f8f9fa;
    border-left: 4px solid var(--bs-primary);
}

.navbar-logo {
    height: 50px;
    padding: 4px;
    border-radius: 4px;
}

.footer-link {
    color: #adb5bd;
    text-decoration: none;
    transition: color 0.2s ease-in-out;
}

    .footer-link:hover {
        color: #ffffff;
    }

    .footer-link.disabled {
        color: #6c757d;
        pointer-events: none;
    }

/* Defining my main theme colours as CSS variables. */
/* This makes it super easy to change the site's colour scheme later. */
:root {
    --bs-primary: #007A4D;
    --bs-primary-rgb: 0, 122, 77;
    --custom-green-darker: #005c3a;
}

/* Overriding Bootstrap's default styles to use my custom green theme colour for primary buttons. */
/* The !important tag is sometimes needed to make sure my style overrides over Bootstrap's. */
.btn-primary {
    background-color: var(--bs-primary) !important;
    border-color: var(--bs-primary) !important;
    color: #fff !important; /* Ensures text is white */
}

.btn-primary:hover, .btn-primary:active {
    background-color: var(--custom-green-darker) !important;
    border-color: var(--custom-green-darker) !important;
}

.bg-primary {
    background-color: var(--bs-primary) !important;
}

a {
    color: var(--bs-primary);
}

.btn-outline-primary {
    color: var(--bs-primary) !important;
    border-color: var(--bs-primary) !important;
}

    .btn-outline-primary:hover {
        color: #fff !important;
        background-color: var(--bs-primary) !important;
        border-color: var(--bs-primary) !important;
    }

.event-card {
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

    .event-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
    }
